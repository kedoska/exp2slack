{"version":3,"sources":["webpack://exp2slack/webpack/universalModuleDefinition","webpack://exp2slack/webpack/bootstrap","webpack://exp2slack/external \"@slack/client\"","webpack://exp2slack/external \"error-stack-parser\"","webpack://exp2slack/external \"os\"","webpack://exp2slack/./index.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","hostname","platform","release","pkg","ErrorStackParser","IncomingWebhook","webhook","undefined","extract","err","Error","isError","items","parse","length","notify","next","events","attachments","x","message","fileName","replace","__dirname","color","title","concat","functionName","lineNumber","text","buildErrorSource","arguments","filter","forEach","indexOf","moduleName","split","console","log","ts","Date","getTime","buildErrorStack","version","send","innerError","exp2slack","url","req","res","process","env","SLACK_WEBHOOK_URL","configure"],"mappings":"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","file":"exp2slack.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"exp2slack\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"exp2slack\"] = factory();\n\telse\n\t\troot[\"exp2slack\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"@slack/client\");","module.exports = require(\"error-stack-parser\");","module.exports = require(\"os\");","const { hostname, platform, release } = require('os')\nconst pkg = require('./package.json')\nconst ErrorStackParser = require('error-stack-parser')\nconst { IncomingWebhook } = require('@slack/client')\nlet webhook = undefined\n\nconst isError = (err) => (err instanceof Error)\n\nconst extract = (err) => {\n  if (!isError(err)) {\n    return []\n  }\n  const items = ErrorStackParser.parse(err)\n  if (items.length <= 0){\n    return []\n  }\n  return items\n}\n\nconst buildErrorStack = (items = []) => {\n  \n  let text = ''\n  const fields = items\n    .filter(x => x.functionName)\n    .forEach((x, i) => {\n      let fileName = x.fileName.replace(__dirname, '')\n      if (fileName.indexOf('node_modules') > -1) {\n        const moduleName = fileName.split('/')[2]\n        console.log(moduleName)\n        fileName = fileName.replace(`/node_modules/${moduleName}`, `-> ${moduleName}`)\n        console.log(fileName)\n      }\n      let icon = ''\n      if (i === 0) {\n        return {}\n      }\n      const functionName = x.functionName.indexOf('anonymous') > -1 \n        ? 'anonymous function'\n        : x.functionName\n      text += `${functionName} ${fileName} line *${x.lineNumber}*\\n`\n    })\n\n  const errorStack = {\n    \"text\": text,\n    \"ts\": new Date().getTime() / 1000\n  }\n  return errorStack\n}\n\nconst buildErrorSource = (x, message) => {\n  const fileName = x.fileName.replace(__dirname, '')\n  const errorStack = {\n    \"color\": \"#ff0000\",\n    \"title\": `${x.functionName} ${fileName} line ${x.lineNumber}`,\n    \"text\": `:boom: ${message}`,\n  }\n  return errorStack\n}\n\nconst notify = (err, next) => {\n  const events = extract(err)\n  const attachments = (events && events.length > 0) \n      ? [buildErrorSource(events[0], err.message), buildErrorStack(events)] \n      : []\n  const message = {\n    text: `${pkg.name} ${pkg.version} at ${hostname()} ${platform()} ${release()}`,\n    attachments\n  }\n  webhook.send(message, (innerError) => {\n    if (next) {\n      next(err)\n    }\n  })\n}\n\nconst exp2slack = (url) => {\n\n  webhook = new IncomingWebhook(url)\n\n  return function (err, req, res, next) {\n      const webhookUrl = url || process.env.SLACK_WEBHOOK_URL\n      if (!url) {\n        return next(new Error('SLACK_WEBHOOK_URL is required to initialize IncomingWebhook'))\n      }\n      notify(err, next)\n  }\n}\n\nmodule.exports = exp2slack\nmodule.exports.configure = exp2slack\nmodule.exports.notify = notify\n"],"sourceRoot":""}